// <auto-generated />
using System;
using Aluguel_Entregas.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aluguel_Entregas.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Courier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("License")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<int>("LicensesType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.HasIndex("License")
                        .IsUnique();

                    b.ToTable("Courier", (string)null);
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Motorcycle", (string)null);
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Rent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CourierId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MotorcycleId")
                        .HasColumnType("uuid");

                    b.Property<int>("RentalPlans")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TotalValue")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.HasIndex("MotorcycleId")
                        .IsUnique();

                    b.ToTable("Rent", (string)null);
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Courier", b =>
                {
                    b.HasOne("Aluguel_Entregas.Domain.Entities.User", "User")
                        .WithOne("Courier")
                        .HasForeignKey("Aluguel_Entregas.Domain.Entities.Courier", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Rent", b =>
                {
                    b.HasOne("Aluguel_Entregas.Domain.Entities.Courier", "Courier")
                        .WithMany("Rents")
                        .HasForeignKey("CourierId");

                    b.HasOne("Aluguel_Entregas.Domain.Entities.Motorcycle", "Motorcycle")
                        .WithOne("Rent")
                        .HasForeignKey("Aluguel_Entregas.Domain.Entities.Rent", "MotorcycleId");

                    b.Navigation("Courier");

                    b.Navigation("Motorcycle");
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Courier", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.Motorcycle", b =>
                {
                    b.Navigation("Rent");
                });

            modelBuilder.Entity("Aluguel_Entregas.Domain.Entities.User", b =>
                {
                    b.Navigation("Courier")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
